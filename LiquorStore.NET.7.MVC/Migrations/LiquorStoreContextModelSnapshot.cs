// <auto-generated />
using LiquorStore.NET._7.MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LiquorStore.NET._7.MVC.Migrations
{
    [DbContext(typeof(LiquorStoreContext))]
    partial class LiquorStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Brand", (string)null);
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Coctel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Coctel", (string)null);
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoctelId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CoctelId");

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Liquor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Alcohol")
                        .HasColumnType("real");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Liquor", (string)null);
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.LiquorCoctel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoctelId")
                        .HasColumnType("int");

                    b.Property<int>("LiquorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoctelId");

                    b.HasIndex("LiquorId");

                    b.ToTable("LiquorCoctel", (string)null);
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Preparation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoctelId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoctelId");

                    b.ToTable("Preparation", (string)null);
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Ingredient", b =>
                {
                    b.HasOne("LiquorStore.NET._7.MVC.Models.Entities.Coctel", "Coctel")
                        .WithMany("Ingredients")
                        .HasForeignKey("CoctelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coctel");
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Liquor", b =>
                {
                    b.HasOne("LiquorStore.NET._7.MVC.Models.Entities.Brand", "Brand")
                        .WithMany("Liquors")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiquorStore.NET._7.MVC.Models.Entities.Category", "Category")
                        .WithMany("Liquors")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.LiquorCoctel", b =>
                {
                    b.HasOne("LiquorStore.NET._7.MVC.Models.Entities.Coctel", "Coctel")
                        .WithMany("LiquorCoctels")
                        .HasForeignKey("CoctelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiquorStore.NET._7.MVC.Models.Entities.Liquor", "Liquor")
                        .WithMany("LiquorCoctels")
                        .HasForeignKey("LiquorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coctel");

                    b.Navigation("Liquor");
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Preparation", b =>
                {
                    b.HasOne("LiquorStore.NET._7.MVC.Models.Entities.Coctel", "Coctel")
                        .WithMany("Preparations")
                        .HasForeignKey("CoctelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coctel");
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Brand", b =>
                {
                    b.Navigation("Liquors");
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Category", b =>
                {
                    b.Navigation("Liquors");
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Coctel", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("LiquorCoctels");

                    b.Navigation("Preparations");
                });

            modelBuilder.Entity("LiquorStore.NET._7.MVC.Models.Entities.Liquor", b =>
                {
                    b.Navigation("LiquorCoctels");
                });
#pragma warning restore 612, 618
        }
    }
}
